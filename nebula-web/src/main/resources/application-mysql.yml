spring:
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/nebula?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
    username: root
    password: 123456
    # 初始化大小，最小，最大
    initial-size: 5
    min-idle: 5
    max-active: 20
    # 配置获取连接等待超时的时间
    max-wait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    pool-prepared-statements: true
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,slf4j
    use-global-data-source-stat: true
    logSlowSql: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


    # 启动是否执行初始化sql  always一直
    initialization-mode: always
    # 初始化数据sql文件位置
    data:
      - classpath:initDataSql/role.sql
      - classpath:initDataSql/user.sql
      - classpath:initDataSql/menu.sql

    stat-view-servlet:
      userName: admin
      passWord: 123456
      reset-enable: false
      url-pattern: /druid/*
      # 添加IP白名单 黑名单配置用deny
      allow: 127.0.0.1
    web-stat-filter:
      # 添加过滤规则
      url-pattern: /*
      # 忽略过滤格式
      exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      # 监控单个URL的sql调用
      profileEnable: true


  #jpa
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    open-in-view: false
    database: mysql
    generate-ddl: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect